%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.10.2 (Build 14C109) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 645 416
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
{ld}repeat pop
/SC{	
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		
/cm {cmmtx astore CM concat}bd	
/W{clip newpath}bd
/W*{eoclip newpath}bd
statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	
    true
}{
    pop	
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse
{	
    { 
	{ 
	    pop pop 
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd
/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd
/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd
/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	
dict begin
{def} repeat
pop		
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	
}bd
/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ 
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ 
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		
/cp_proc/x_proc ld 	
/base_charpath		
{
    /t_array xs
    /t_i 0 def
    { 
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ 
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ 
findfont dup length dict copy definefont pop
}bd
L3? dup dup{save exch}if
/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def
/setupFunEval 
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   
		    
	[ 
	    0 1 nRange 1 sub
	    { 
		    2 mul/nDim2 xd		
		    Range nDim2 get		
		    Range nDim2 1 add get	
		    1 index sub			
						
		    255 div			
		    exch			
	    }for
	]store
    end
}bd
/FunEval 
{
    begin
	
	nRange mul /val xd	
				
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd 
	    val	
	    add DataSource exch get 
	    mulRange nDim2 get mul 	
	    mulRange nDim2 1 add get 
	    add 
	}for	
    end
}bd
/max 
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd
/sh2
{	
	/Coords load aload pop 	
	3 index 3 index translate	
					
	3 -1 roll sub	
	3 1 roll exch 	
	sub				
	2 copy
	dup mul exch dup mul add sqrt	
	dup
	scale  
	atan	
	
	rotate		
	
	/Function load setupFunEval	
	
	
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	
	grestore	
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd
/shp	
{	
	4 copy
	
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
	
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd
/calcmaxs
{	
	
	xmin dup mul ymin dup mul add sqrt		
	xmax dup mul ymin dup mul add sqrt		
	xmin dup mul ymax dup mul add sqrt		
	xmax dup mul ymax dup mul add sqrt		
	max max max								
}bd
/sh3
{	
	/Coords load aload pop 	
	5 index 5 index translate	
	3 -1 roll 6 -1 roll sub		
	3 -1 roll 5 -1 roll sub		
	2 copy dup mul exch dup mul add sqrt
	/dx xs						
	2 copy 0 ne exch 0 ne or
	{
		
		exch atan rotate	
	}{
		pop pop
	}ifelse
	
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	
	/Nsteps xs		
	setupFunEval		
	
	
	
	
	
	dx r2 add r1 lt{
		
		0 
	}{
		dx r1 add r2 le
		{ 
			1
		}{ 
			r1 r2 eq
			{	
				2
			}{ 
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		
	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	
		{	
			0/Function load FunEval sc	
			
			
			
			
			{ 
				{	
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				}
				{	
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	
					
					
				
					
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	
					
				
					r2 r1 gt{	
						
						0 r1
						r1 neg r2 r1 sub div dx mul	
						0	
						shp	
					}{	
						
						
						
						0 r1 calcmaxs	
						dup
						
						r2 add dx mul dx r1 r2 sub sub div
						neg				
						exch 1 index	
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	
		}if
	}if
	
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	
	
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	
		{	
			Nsteps/Function load FunEval sc	
			
			
			
			
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				} 
				{	
					
					
					xmax abs r1 add r1 dx r1 shp
				}	
				{	
			
					r2 r1 gt{
						
						
						
						calcmaxs dup	
						
						r1 add dx mul dx r2 r1 sub sub div	
						exch 1 index	
						exch sub
						dx r2
						shp
					}{	
						
						r1 neg r2 r1 sub div dx mul	
						0		
						dx 		
						r2		
						shp
					}ifelse
				}
			}			
			sh3tp get exec	
		}if
	}if
}bd
/sh		
{	
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	
					2 index sub				
					3 index					
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd
{restore}if not dup{save exch}if
	L3?{	
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if
end
setpacking
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 645 416
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: IPLRYO+GillSansMT
%!FontType1-1.0: IPLRYO+GillSansMT 1.0000.1.6500
/FontInfo 1 dict dup begin
/FSType 8 def
end readonly def
14 dict begin/FontName /IPLRYO+GillSansMT def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /zero put
dup 34 /five put
dup 35 /one put
dup 36 /two put
dup 37 /three put
dup 38 /four put
dup 39 /n put
dup 40 /p put
dup 41 /e put
dup 42 /r put
dup 43 /c put
dup 44 /t put
dup 45 /a put
dup 46 /g put
dup 47 /space put
dup 48 /o put
dup 49 /f put
dup 50 /k put
dup 51 /m put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -332 1 index div -578 2 index div 2132 3 index div 1880 5 -1 roll div]cvx def
/sfnts [<







00>] def
/CharStrings 21 dict dup begin
/.notdef 0 def
/space 1 def
/zero 2 def
/one 3 def
/two 4 def
/three 5 def
/four 6 def
/five 7 def
/a 8 def
/c 9 def
/e 10 def
/f 11 def
/g 12 def
/k 13 def
/m 14 def
/n 15 def
/o 16 def
/p 17 def
/r 18 def
/t 19 def
/currency 20 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontInfo 1 dict dup begin
/FSType 8 def
end readonly def
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-332 -578 2132 1880}def
/UniqueID 4431115 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C92633B2598E0B1EDFA3C2732C9D3498122A5E23C1999619F9F2A05B054579B3D4F8C0A2AFF197B3FAB33694F5ADB9F93B6B606FCB9C0F983F0A0F5BE5BCA5C657E0E0DD8E1A653AB26762281F794DF8FC998F528EA7E43524C69040DF949BEA16EB8C3C2C7EEB220120481646ADE209CD7DE32A4FF282ABC568297C7769E169C670AA78CDA4FB6D7AAC31359096C65139059D9631096287471C7E87F9021833640BF5536EC83CAE65BDC71ACF7204B51C130009D3732D4D10839EE62AA2731231EE18F9C50C8778C81CC7BA9428144DF5303E2A0C7B1D1236B3E0CF20C575264CB721B58D011568C7CA0645B254392BADEDD9C70E471D5016DCD7A364AEA69F185EB5DE6E3B858E502A071A62698B4FFFCB76026FF8A0C54A8B6B6B26F146EFD69A95EA8084FC68EB18CD1CFE6F1FDFB953A6EE8A6E4AD6C12EA8FCC8070E10161B82E1B0B47F2A7C91216C7082A358D40F363F51C780C26B2A77110D701D5B616736881D67A6D3CD3C69DA3280D9F5B0E9A653DB7391E3FDE720EBEBDBF115D4E2B71A6850FDB85D361C399749F258235CAD6232B0CDBFE1A1EDB67ABAC402B6C6C2958A4E922821039D95FDDD527ABA2C3A2DDE0709D203C13A4D7D779648F414FA620AE5251D3E51AF08CE0087F3457652449F7CF0E29810275206A69C4E04F98470096FE2B7AD0A9AAA4712283E09D961EC3BAC55807A8324FC930DA23569275861E16C14E60CBE9AD59CBC50457EAFEC70D6358D0A8194C9C72ECFA016579
4D544674073E562B62694E05AC12EF68401D99B2545808827F341DFE636797245781FE0E4755322CB10A2331DD0003CF30E0F1C6824EAD32ECC756E9E16FB784DA05A4EAF0368BB6DEE979070803D7E4C20D0CD47000D4F6C6453B8DB4E6080859EA332086F78CB9E1262C9BD40F41E25531B830E468A609149F00ABB342892C7DA930638FB0D45CE6A167A583096FBAFB3C96D30D9DF544CD0A7FCE7E246827F7893E04E092AD23E9FBCB1A3954DDAB3224221161E866CB4C58F27FEB568E20DAF3C6E1BFBCA4F54B312EBC57F0592575CC1FF5741136345BCFE93158ED6D34449FC55993F9DB4742F52105FEE7D2F0D5CCE2C549A44DA4A9318C09A07A6643991A68E74674DE614D10C34736548204B2981F90D772C7C5547D3ACBD92F929B76641CD1762725B8458DAEFDE469173CD2DB2DE6432F5A5EE99C6836E99D477EF7262CE4575B1C3ED9FF0B543FC4DF23AFDA627BDF10DD665A82EC45C0EDEA00B04D81FB729A4EFED5055BA251DC0913A357EBC4349E8454FDF233C31B7A24DA3F7B7E87D592B943A769E00EB11359154EF37CAFA80E2738D886BC55D0DC7BFB83BEB5622CE4CFC3D0463FCD21DF4ECB8FCC58EE263BC2704ED733AA3D229A48B94658DCFAC6E22EB3D702AC7D19C16BBB6ECB4D363FFA003859F22ABA65DF9C68B80F4799FC704DB3B1D33DEDED4CD3FB34C9531BB1A4E979B017444B383524A119F4AC9487BD6A94485CD8832F60F21F5929546BBFCB22A3FD6B688D868775C4D47517AF22DB87304A8504AFEC0EB3B92C359B8CA49572AB318B431E3D2396055309E7EEC7A68642DCAB68FB061720F0BF0126FC7C50B0035FA990ECD643DDDFF4BFAF3C3452AB738B5CCD30D06A4581DBF3E3ED7350F7B8CB9925E8BABBDC11E4B09E51947AD5C0C85225115E3FF0782AE8A622E49ECE4FE98FCD44D1FA3B453842E5C1D72EB8E5BD82B14E7F2BEB201346D4CA20F19E0D24ECD33A05A2429DAA5E266F32C95933551CCEB6AD516979E800C87D3B60C51C86FED3EA180B5CD12A40C1D99365616195E5D5DF45F87526FC17925C96DD6B7F5BE23E13147A3E17D6B2E4815EBB466892CCFB31416667A00F83CB0C75E1BD08AF30D89B13BA13E15198031E88971E9A9DE08AA2F762304BCF9E4721FF9E61F29DBA8F734720465DEE68614489696A6F135C115454A9828FD72752783273864E6382FAA451ABC9BF91D35FFB9E5A49BD8A52111F7F2A59F3F588ECD5CA1826E56A5BA045A8B00A03B9D66B047036EA079C6D223D82C758D921B5E7758102C8C904CF4005C32B76954BE22002E161AACFC1BE376D5E9F17AFF462C4196F33807324EBEF6C5E8C9F4954B4A3B8D566469465E49D9C97CE4E23A77E88726574FA0782D126E5A93B92CA09CAA8302F291FB0DB7131DD73F39AB8E76A151E99791A2252FFEBCF6817B9

77DC9A0CF7574F032728A9830777548874E968F84004E94489FA3EA09E5608CB2CA4E36EB1463ADF124B769BB10400458D4DCB28C0C204533D6C2D5B321581EFB15FC7DAEA71A178002A1B98336E57AB8265EB911EACC177F9C7D9C586DC2878464C65331C5880863538CA1540C040D7E81FB5F7319AC4325A404EAF115CED265BCD7D276330FFD19A574A25B180AB78C998C1DEA63442973C5F3932A2B227B89F85716F6C9F58D9BFAF04D1EBCDD1693F088CF69D04C0519EBE5682E36B98BE7BA8E3EFCC82F6EDCD66D074A07327DD42550BE7BE53AA4166002C7F6DF9310C1C9F902DE5143DF1A476E1868ECB4665B1B64E0F1E54BB9AC7ABE666D52921BA9883C237AC37711C96DCA695C56105493FFEBFA91BDA305F6D6F4BC868915D95BDEF34EA111D5CB77E35209446A029F8B45D345DDCFF68A5E07E633BB0278E00BE2E7C602EC3EC97630CA69C731487BB42FFE8FCD31362279FA2C480EA9985DC2642EB805F2D8A08128183F50D7F4217B868DBB2FDA0A6A19D6D71CFE8A7F95EFF45453DCC88DC71A68970A82760979113940E
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/IPLRYO+GillSansMT cguidfix
/F1.1/IPLRYO+GillSansMT renmfont
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { { 1.8008  exp } bind  exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs1 exch/ColorSpace dr pop
%%EndPageSetup
1 j
0.60000002 i
/Cs1 SC
0 sc
q
0 0 645 416 rc
104.6 315.59653 m
131.7 328.3511 l
158.8 339.76889 l
185.89999 339.27426 l
213 347.6868 l
240.10001 339.59537 l
267.20001 340.68073 l
294.29999 325.65375 l
321.39999 309.55273 l
348.5 294.85834 l
375.60001 292.26483 l
402.70001 298.98276 l
429.79999 297.06506 l
456.89999 296.61481 l
484 299.46976 l
511.10001 297.89133 l
538.20001 299.50607 l
565.29999 298.6051 l
592.40002 300.01447 l
619.5 300.68161 l
S
104.6 310.59653 m
104.6 320.59653 l
S
131.7 323.3511 m
131.7 333.3511 l
S
158.8 334.76889 m
158.8 344.76889 l
S
185.89999 334.27426 m
185.89999 344.27426 l
S
213 342.6868 m
213 352.6868 l
S
240.10001 334.59537 m
240.10001 344.59537 l
S
267.20001 335.68073 m
267.20001 345.68073 l
S
294.29999 320.65375 m
294.29999 330.65375 l
S
321.39999 304.55273 m
321.39999 314.55273 l
S
348.5 289.85834 m
348.5 299.85834 l
S
375.60001 287.26483 m
375.60001 297.26483 l
S
402.70001 293.98276 m
402.70001 303.98276 l
S
429.79999 292.06506 m
429.79999 302.06506 l
S
456.89999 291.61481 m
456.89999 301.61481 l
S
484 294.46976 m
484 304.46976 l
S
511.10001 292.89133 m
511.10001 302.89133 l
S
538.20001 294.50607 m
538.20001 304.50607 l
S
565.29999 293.6051 m
565.29999 303.6051 l
S
592.40002 295.01447 m
592.40002 305.01447 l
S
619.5 295.68161 m
619.5 305.68161 l
S
0.5 w
2 J
77.5 49.5 m
619.5 49.5 l
S
77.5 49.5 m
77.5 403.5 l
S
0 J
77.5 54.5 m
77.5 44.5 l
S
1 0 0 1 74 24.5 cm
/F1.1[ 14 0 0 14 0 0]sf
0 4 m
(!)s
CM
104.6 52 m
104.6 47 l
S
131.7 52 m
131.7 47 l
S
158.8 52 m
158.8 47 l
S
185.89999 52 m
185.89999 47 l
S
213 54.5 m
213 44.5 l
S
1 0 0 1 202.5 24.5 cm
0 4 m
("!!)[ 7.000000 7.000000 0.000000 ] xS
CM
240.10001 52 m
240.10001 47 l
S
267.20001 52 m
267.20001 47 l
S
294.29999 52 m
294.29999 47 l
S
321.39999 52 m
321.39999 47 l
S
348.5 54.5 m
348.5 44.5 l
S
1 0 0 1 334.5 24.5 cm
0 4 m
(#!!!)[ 7.000000 7.000000 7.000000 0.000000 ] xS
CM
375.60001 52 m
375.60001 47 l
S
402.70001 52 m
402.70001 47 l
S
429.79999 52 m
429.79999 47 l
S
456.89999 52 m
456.89999 47 l
S
484 54.5 m
484 44.5 l
S
1 0 0 1 470 24.5 cm
0 4 m
(#"!!)[ 7.000000 7.000000 7.000000 0.000000 ] xS
CM
511.10001 52 m
511.10001 47 l
S
538.20001 52 m
538.20001 47 l
S
565.29999 52 m
565.29999 47 l
S
592.40002 52 m
592.40002 47 l
S
619.5 54.5 m
619.5 44.5 l
S
1 0 0 1 605.5 24.5 cm
0 4 m
($!!!)[ 7.000000 7.000000 7.000000 0.000000 ] xS
CM
80 49.5 m
75 49.5 l
S
80 56.724491 m
75 56.724491 l
S
80 63.948978 m
75 63.948978 l
S
80 71.17347 m
75 71.17347 l
S
72.5 78.397957 m
82.5 78.397957 l
S
1 0 0 1 62.5 69.897957 cm
0 4 m
(")s
0.25 w
[
3
5
] 0 d
CM
77.5 78.397957 m
619.5 78.397957 l
S
0.5 w
[] 0 d
80 85.622452 m
75 85.622452 l
S
80 92.846939 m
75 92.846939 l
S
80 100.07143 m
75 100.07143 l
S
80 107.29592 m
75 107.29592 l
S
72.5 114.52041 m
82.5 114.52041 l
S
1 0 0 1 55.5 106.02041 cm
0 4 m
(#!)[ 7.000000 0.000000 ] xS
0.25 w
[
3
5
] 0 d
CM
77.5 114.52041 m
619.5 114.52041 l
S
0.5 w
[] 0 d
80 121.7449 m
75 121.7449 l
S
80 128.96939 m
75 128.96939 l
S
80 136.19388 m
75 136.19388 l
S
80 143.41837 m
75 143.41837 l
S
72.5 150.64285 m
82.5 150.64285 l
S
1 0 0 1 55.5 142.14285 cm
0 4 m
(#")[ 7.000000 0.000000 ] xS
0.25 w
[
3
5
] 0 d
CM
77.5 150.64285 m
619.5 150.64285 l
S
0.5 w
[] 0 d
80 157.86734 m
75 157.86734 l
S
80 165.09184 m
75 165.09184 l
S
80 172.31633 m
75 172.31633 l
S
80 179.54082 m
75 179.54082 l
S
72.5 186.7653 m
82.5 186.7653 l
S
1 0 0 1 55.5 178.2653 cm
0 4 m
($!)[ 7.000000 0.000000 ] xS
0.25 w
[
3
5
] 0 d
CM
77.5 186.7653 m
619.5 186.7653 l
S
0.5 w
[] 0 d
80 193.98979 m
75 193.98979 l
S
80 201.21428 m
75 201.21428 l
S
80 208.43878 m
75 208.43878 l
S
80 215.66327 m
75 215.66327 l
S
72.5 222.88776 m
82.5 222.88776 l
S
1 0 0 1 55.5 214.38776 cm
0 4 m
($")[ 7.000000 0.000000 ] xS
0.25 w
[
3
5
] 0 d
CM
77.5 222.88776 m
619.5 222.88776 l
S
0.5 w
[] 0 d
80 230.11224 m
75 230.11224 l
S
80 237.33673 m
75 237.33673 l
S
80 244.56122 m
75 244.56122 l
S
80 251.78572 m
75 251.78572 l
S
72.5 259.01019 m
82.5 259.01019 l
S
1 0 0 1 55.5 250.51021 cm
0 4 m
(%!)[ 7.000000 0.000000 ] xS
0.25 w
[
3
5
] 0 d
CM
77.5 259.01019 m
619.5 259.01019 l
S
0.5 w
[] 0 d
80 266.23468 m
75 266.23468 l
S
80 273.4592 m
75 273.4592 l
S
80 280.68369 m
75 280.68369 l
S
80 287.90817 m
75 287.90817 l
S
72.5 295.13266 m
82.5 295.13266 l
S
1 0 0 1 55.5 286.63266 cm
0 4 m
(%")[ 7.000000 0.000000 ] xS
0.25 w
[
3
5
] 0 d
CM
77.5 295.13266 m
619.5 295.13266 l
S
0.5 w
[] 0 d
80 302.35715 m
75 302.35715 l
S
80 309.58163 m
75 309.58163 l
S
80 316.80612 m
75 316.80612 l
S
80 324.03061 m
75 324.03061 l
S
72.5 331.2551 m
82.5 331.2551 l
S
1 0 0 1 55.5 322.7551 cm
0 4 m
(&!)[ 7.000000 0.000000 ] xS
0.25 w
[
3
5
] 0 d
CM
77.5 331.2551 m
619.5 331.2551 l
S
0.5 w
[] 0 d
80 338.47958 m
75 338.47958 l
S
80 345.70407 m
75 345.70407 l
S
80 352.92856 m
75 352.92856 l
S
80 360.15308 m
75 360.15308 l
S
72.5 367.37756 m
82.5 367.37756 l
S
1 0 0 1 55.5 358.87756 cm
0 4 m
(&")[ 7.000000 0.000000 ] xS
0.25 w
[
3
5
] 0 d
CM
77.5 367.37756 m
619.5 367.37756 l
S
0.5 w
[] 0 d
80 374.60205 m
75 374.60205 l
S
80 381.82654 m
75 381.82654 l
S
80 389.05103 m
75 389.05103 l
S
80 396.27551 m
75 396.27551 l
S
72.5 403.5 m
82.5 403.5 l
S
1 0 0 1 55.5 395 cm
0 4 m
("!)[ 7.000000 0.000000 ] xS
0.25 w
[
3
5
] 0 d
CM
77.5 403.5 m
619.5 403.5 l
S
Q
0 i
q
47.5 3 596 21 rc
1 0 0 -1 47.5 24 cm
/F1.1[ 18 0 0 -18 0 0]sf
293.5 17 m
(')s
Q
q
2 33.5 21 381 rc
0 1 1 0 2 33.5 cm
/F1.1[ 18 0 0 -18 0 0]sf
72.32666 17 m
(\(\)*+\)',-.\)/01/\(\)-2/\(\)*10*3-'+\))[ 9.000000 8.622070 6.679688 7.883789 8.622070 9.000000 5.994141 7.681641 7.681641 8.622070 5.000977 9.931641 4.500000 5.000977 9.000000 8.622070 7.681641 8.622070 5.000977 9.000000 8.622070 7.127930 4.324219 9.931641 7.127930 13.877930 7.681641 9.000000 7.883789 0.000000 ] xS
ep
end
%%Trailer
%%EOF
